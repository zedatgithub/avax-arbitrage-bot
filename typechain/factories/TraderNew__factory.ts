/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TraderNew, TraderNewInterface } from "../TraderNew";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inputNeededForFirstTrade",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "reserves",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "outToken",
        type: "address",
      },
    ],
    name: "arbTradeFlash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "baguetteCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "canaryCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "elkCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "joeCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lydiaCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "oliveCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pangolinCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "partyCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "yetiswapCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061125e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063791b35d911610081578063dac6e9481161005b578063dac6e948146100ce578063ee22dd87146100ce578063f8890f8e146100ce57600080fd5b8063791b35d9146100ce578063a2a43a0a146100ce578063d172cd47146100ce57600080fd5b80633cffbd2f116100b25780633cffbd2f146100ce5780636c03d528146100e35780636dca4cd4146100ce57600080fd5b806307d3513a146100ce57806310d1e85c146100ce575b600080fd5b6100e16100dc366004610cab565b610108565b005b6100f66100f1366004610e85565b61011b565b60405190815260200160405180910390f35b6101148484848461059b565b5050505050565b6000805b858110156102d757600080888884818110610163577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906101789190610c6c565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156101bd57600080fd5b505afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f59190610e1f565b506dffffffffffffffffffffffffffff91821693501690506102178183611118565b878785818110610250577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135146102c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4641494c3a4e0000000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b505080806102cf9061116c565b91505061011f565b506000888888888d6040516020016102f3959493929190610f38565b60405160208183030381529060405290508686600081811061033e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906103539190610c6c565b73ffffffffffffffffffffffffffffffffffffffff1663022c0d9f8a8a60008181106103a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201358b8b60018181106103e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013530856040518563ffffffff1660e01b81526004016104119493929190610ff0565b600060405180830381600087803b15801561042b57600080fd5b505af115801561043f573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff861691506370a082319060240160206040518083038186803b1580156104ab57600080fd5b505afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190610e6d565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905290915073ffffffffffffffffffffffffffffffffffffffff85169063a9059cbb90604401602060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610dff565b509a9950505050505050505050565b600080806105ab84860186610d3c565b92509250925060008088600014156106be573373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561060357600080fd5b505afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b9190610c8f565b3373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561068157600080fd5b505afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b99190610c8f565b6107ba565b3373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561070457600080fd5b505afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190610c8f565b3373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561078257600080fd5b505afa158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190610c8f565b915091508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85600181518110610814577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518a8c6108289190611100565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401602060405180830381600087803b15801561089357600080fd5b505af11580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190610dff565b5060015b8451811015610ad4576000858281518110610913577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663022c0d9f888460026109479190611118565b8151811061097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151898560026109949190611118565b61099f906001611100565b815181106109d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160018a516109ec9190611155565b8614610a4257896109fe876001611100565b81518110610a35577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610a44565b305b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16909152610a8e9392919060248101610ff0565b600060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b50505050508080610acc9061116c565b9150506108cf565b506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905273ffffffffffffffffffffffffffffffffffffffff82169063a9059cbb90604401602060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7b9190610dff565b50505050505050505050565b60008083601f840112610b98578182fd5b50813567ffffffffffffffff811115610baf578182fd5b6020830191508360208260051b8501011115610bca57600080fd5b9250929050565b600082601f830112610be1578081fd5b81356020610bf6610bf1836110dc565b61108d565b80838252828201915082860187848660051b8901011115610c15578586fd5b855b85811015610c3c578135610c2a81611203565b84529284019290840190600101610c17565b5090979650505050505050565b80516dffffffffffffffffffffffffffff81168114610c6757600080fd5b919050565b600060208284031215610c7d578081fd5b8135610c8881611203565b9392505050565b600060208284031215610ca0578081fd5b8151610c8881611203565b600080600080600060808688031215610cc2578081fd5b8535610ccd81611203565b94506020860135935060408601359250606086013567ffffffffffffffff80821115610cf7578283fd5b818801915088601f830112610d0a578283fd5b813581811115610d18578384fd5b896020828501011115610d29578384fd5b9699959850939650602001949392505050565b600080600060608486031215610d50578283fd5b833567ffffffffffffffff80821115610d67578485fd5b818601915086601f830112610d7a578485fd5b81356020610d8a610bf1836110dc565b8083825282820191508286018b848660051b8901011115610da957898afd5b8996505b84871015610dcb578035835260019690960195918301918301610dad565b5097505087013592505080821115610de1578384fd5b50610dee86828701610bd1565b925050604084013590509250925092565b600060208284031215610e10578081fd5b81518015158114610c88578182fd5b600080600060608486031215610e33578283fd5b610e3c84610c49565b9250610e4a60208501610c49565b9150604084015163ffffffff81168114610e62578182fd5b809150509250925092565b600060208284031215610e7e578081fd5b5051919050565b60008060008060008060008060a0898b031215610ea0578283fd5b88359750602089013567ffffffffffffffff80821115610ebe578485fd5b610eca8c838d01610b87565b909950975060408b0135915080821115610ee2578485fd5b610eee8c838d01610b87565b909750955060608b0135915080821115610f06578485fd5b50610f138b828c01610b87565b9094509250506080890135610f2781611203565b809150509295985092959890939650565b6060815284606082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861115610f70578081fd5b8560051b80886080850137608090830183810382016020808601919091529181018690528691839160a0015b87831015610fd9578335610faf81611203565b73ffffffffffffffffffffffffffffffffffffffff16815292810192600192909201918101610f9c565b809450505050508260408301529695505050505050565b84815260006020858184015273ffffffffffffffffffffffffffffffffffffffff85166040840152608060608401528351806080850152825b818110156110455785810183015185820160a001528201611029565b81811115611056578360a083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160a0019695505050505050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110d4576110d46111d4565b604052919050565b600067ffffffffffffffff8211156110f6576110f66111d4565b5060051b60200190565b60008219821115611113576111136111a5565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611150576111506111a5565b500290565b600082821015611167576111676111a5565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561119e5761119e6111a5565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461122557600080fd5b5056fea26469706673582212207eb83a2e644d9382a851e7c91653a0834eda67a671ee777427d91299381e2bbf64736f6c63430008040033";

export class TraderNew__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TraderNew> {
    return super.deploy(overrides || {}) as Promise<TraderNew>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TraderNew {
    return super.attach(address) as TraderNew;
  }
  connect(signer: Signer): TraderNew__factory {
    return super.connect(signer) as TraderNew__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TraderNewInterface {
    return new utils.Interface(_abi) as TraderNewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TraderNew {
    return new Contract(address, _abi, signerOrProvider) as TraderNew;
  }
}
